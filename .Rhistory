out
wd = "/rsrch2/iacs/ngs_runs/150806_SN1120_0348_BC79KEACXX/fastqs/Y76I8n1Y76/Project_Pancreatic-MS132"
out = create_fq_sheet(x=wd)
View(out)
sampout = subset(out, samplename == "GLizee-Pancreatic-MS132-MP013normalDNA", read == 1)
sampout
s=unique(out$samplename)[1]
s
sampout = subset(out, samplename == s & read == 1)
sampout
fqs = sampout$file
fqs
sample_name = s
fqs = sampout$file
my_bowtie = "/risapps/rhel6/bowtie/1.1.2/bowtie"
lst()
ls()
source('~/Downloads/railab_chipseq-master-d3ba97f0e6f84d79b1d30d89d63e0dae02b12cd1/flowr/chipseq2.R')
source('~/Downloads/railab_chipseq-master-d3ba97f0e6f84d79b1d30d89d63e0dae02b12cd1/flowr/chipseq2.R')
wd = "/rsrch2/iacs/ngs_runs/150806_SN1120_0348_BC79KEACXX/fastqs/Y76I8n1Y76/Project_Pancreatic-MS132"
out = create_fq_sheet(x=wd)
s
sampout = subset(out, samplename == s & read == 1)
sampout
fqs = sampout$file
fqs
sample_name = s
sample_name
flowmat = get_flowmat(fqs = fqs, sample_name = s)
source('~/Downloads/railab_chipseq-master-d3ba97f0e6f84d79b1d30d89d63e0dae02b12cd1/flowr/chipseq2.R')
flowmat = get_flowmat(fqs = fqs, sample_name = s)
View(flowmat)
source('~/Downloads/railab_chipseq-master-d3ba97f0e6f84d79b1d30d89d63e0dae02b12cd1/flowr/chipseq2.R')
flowmat = get_flowmat(fqs = fqs, sample_name = s)
View(flowmat)
source('~/Downloads/railab_chipseq-master-d3ba97f0e6f84d79b1d30d89d63e0dae02b12cd1/flowr/chipseq2.R')
flowmat = get_flowmat(fqs = fqs, sample_name = s)
View(flowmat)
def = to_flowdef(flowmat)
source('~/Downloads/railab_chipseq-master-d3ba97f0e6f84d79b1d30d89d63e0dae02b12cd1/flowr/chipseq2.R')
flowmat = get_flowmat(fqs = fqs, sample_name = s)
def = to_flowdef(flowmat)
def
plot_flow(def)
source('~/Downloads/railab_chipseq-master-d3ba97f0e6f84d79b1d30d89d63e0dae02b12cd1/flowr/chipseq2.R')
flowmat = railab_chipseq(fqs = fqs, sample_name = s)
def = to_flowdef(flowmat)
plot_flow(def)
write_sheet(def, "~/Downloads/railab_chipseq-master-d3ba97f0e6f84d79b1d30d89d63e0dae02b12cd1/flowr/railab_chipseq.def")
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf", check = FALSE)
source("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_bam_bwa.R")
#source(fetch_pipes('fastq_bam_bwa')$pip)
fqs1 = subset(out, read == 1)$file
fqs2 = subset(out, read == 2)$file
set_opts(samplename = "MS132")
#debug(fastq_bam_bwa)
f_merge = fastq_bam_bwa(fqs1, fqs2)
f_preproc = bam_preprocess(f_merge$outfile)
flowr::check_args
?importIntoEnv
namespaceImportFrom(packages = "Rsamtools")
namespaceImportFrom("scanBamHeader", packages = "Rsamtools")
namespaceImportFrom("scanBamHeader", package = "Rsamtools")
namespaceImportFrom("Rsamtools", "scanBamHeader")
namespaceImportFrom("Rsamtools")
namespaceImportFrom(ns = "Rsamtools")
namespaceImportFrom("Rsamtools", ns = "scanBamHeader")
biocLite("S4Vectors")
detach("package:flowr", unload=TRUE)
library("flowr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(ngsflows)
require(ngsflows)
wd = "/rsrch2/iacs/ngs_runs/150806_SN1120_0348_BC79KEACXX/fastqs/Y76I8n1Y76/Project_Pancreatic-MS132/Sample_GLizee-Pancreatic-MS132-MP013normalDNA"
out = create_fq_sheet(x=wd)
params::kable(head(out))
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf", check = FALSE)
source("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_bam_bwa.R")
#source(fetch_pipes('fastq_bam_bwa')$pip)
fqs1 = subset(out, read == 1)$file
fqs2 = subset(out, read == 2)$file
set_opts(samplename = "MS132")
#debug(fastq_bam_bwa)
f_merge = fastq_bam_bwa(fqs1, fqs2)
debug(to_flowmat)
f_merge = fastq_bam_bwa(fqs1, fqs2)
library(ngsflows)
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf", check = FALSE)
source("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_bam_bwa.R")
#source(fetch_pipes('fastq_bam_bwa')$pip)
fqs1 = subset(out, read == 1)$file
fqs2 = subset(out, read == 2)$file
set_opts(samplename = "MS132")
#debug(fastq_bam_bwa)
f_merge = fastq_bam_bwa(fqs1, fqs2)
f_preproc = bam_preprocess(f_merge$outfile)
f_hapl = haplotyper(f_preproc$outfile)
flowmat = rbind(f_merge$flowmat, f_preproc$flowmat, f_hapl$flowmat)
#flowdef = to_flowdef(flowmat)
#write_sheet(flowdef, "~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotypr.def")
## stich them all together
f_merge = fastq_bam_bwa(fqs1, fqs2)
f_merge = fastq_bam_bwa(fqs1, fqs2)
library(ngsflows)
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf", check = FALSE)
source("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_bam_bwa.R")
#source(fetch_pipes('fastq_bam_bwa')$pip)
fqs1 = subset(out, read == 1)$file
fqs2 = subset(out, read == 2)$file
set_opts(samplename = "MS132")
#debug(fastq_bam_bwa)
f_merge = fastq_bam_bwa(fqs1, fqs2)
f_preproc = bam_preprocess(f_merge$outfile)
bam_preprocess
f_preproc = bam_preprocess(f_merge$outfile)
f_preproc = bam_preprocess(f_merge$outfile)
library(ngsflows)
devtools::load_all("~/Dropbox2/Dropbox/public/github_ngsflows")
f_merge = fastq_bam_bwa(fqs1, fqs2)
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf", check = FALSE)
source("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_bam_bwa.R")
#source(fetch_pipes('fastq_bam_bwa')$pip)
fqs1 = subset(out, read == 1)$file
fqs2 = subset(out, read == 2)$file
set_opts(samplename = "MS132")
#debug(fastq_bam_bwa)
f_merge = fastq_bam_bwa(fqs1, fqs2)
require(tools)
f_merge = fastq_bam_bwa(fqs1, fqs2)
f_preproc = bam_preprocess(f_merge$outfile)
f_hapl = haplotyper(f_preproc$outfile)
devtools::load_all("~/Dropbox2/Dropbox/public/github_ngsflows")
f_hapl = haplotyper(f_preproc$outfile)
devtools::load_all("~/Dropbox2/Dropbox/public/github_ngsflows")
f_hapl = haplotyper(f_preproc$outfile)
x
bam
f_preproc$outfile
devtools::load_all("~/Dropbox2/Dropbox/public/github_ngsflows")
f_hapl = haplotyper(f_preproc$outfile)
f_hapl$flowmat %>% View()
View(f_hapl$flowmat)
flowdef = to_flowdef(flowmat)
flowmat = rbind(f_merge$flowmat, f_preproc$flowmat, f_hapl$flowmat)
flowdef = to_flowdef(flowmat)
write_sheet(flowdef, "~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotypr.def")
write_sheet(flowdef, "~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
source('~/.active-rstudio-document', echo=TRUE)
flowdef = as.flowdef(flowmat, "inst/pipelines/fastq_haplotyper.def")
flowdef = as.flowdef("inst/pipelines/fastq_haplotyper.def")
getwd()
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
plot_flow(flowdef)
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
plot_flow(flowdef)
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
plot_flow(flowdef)
plot_flow(flowdef)
library(ngsflows)
plot_flow(flowdef, pdffile = "~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.pdf")
plot_flow(flowdef, pdffile = "~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.pdf")
plot_flow(flowdef, pdffile = "~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.pdf")
library(ngsflows)
plot_flow(flowdef, pdffile = "~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.pdf")
library(ngsflows)
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
library(ngsflows)
plot_flow(flowdef)
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
plot_flow(flowdef)
plot_flow(flowdef, detailed = FALSE)
plot_flow(flowdef, detailed = FALSE, "~/Dropbox/projects/papers_flow/paper_images/fastq_haplotyper.pdf")
plot_flow(flowdef, detailed = FALSE, pdffile = "~/Dropbox/projects/papers_flow/paper_images/fastq_haplotyper.pdf")
plot_flow(flowdef, detailed = FALSE, width = 4, height = 6, pdffile = "~/Dropbox/projects/papers_flow/paper_images/fastq_haplotyper.pdf")
plot_flow(flowdef, detailed = FALSE, width = 6, height = 8, pdffile = "~/Dropbox/projects/papers_flow/paper_images/fastq_haplotyper.pdf")
plot_flow(flowdef, detailed = FALSE, width = 10, height = 8, pdffile = "~/Dropbox/projects/papers_flow/paper_images/fastq_haplotyper.pdf")
plot_flow(flowdef, detailed = FALSE, width = 14, height = 8, pdffile = "~/Dropbox/projects/papers_flow/paper_images/fastq_haplotyper.pdf")
plot_flow(flowdef, detailed = FALSE, width = 12, height = 10, pdffile = "~/Dropbox/projects/papers_flow/paper_images/fastq_haplotyper.pdf")
fobj = to_flow(flowmat, flowdef)
f_merge = fastq_bam_bwa(fqs1, fqs2)
f_preproc = bam_preprocess(f_merge$outfile)
f_merge = fastq_bam_bwa(fqs1, fqs2)
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf", check = FALSE)
source("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_bam_bwa.R")
#source(fetch_pipes('fastq_bam_bwa')$pip)
fqs1 = subset(out, read == 1)$file
fqs2 = subset(out, read == 2)$file
set_opts(samplename = "MS132")
#debug(fastq_bam_bwa)
f_merge = fastq_bam_bwa(fqs1, fqs2)
f_preproc = bam_preprocess(f_merge$outfile)
f_preproc = bam_preprocess(f_merge$outfile)
library(ngsflows)
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf", check = FALSE)
source("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_bam_bwa.R")
#source(fetch_pipes('fastq_bam_bwa')$pip)
fqs1 = subset(out, read == 1)$file
fqs2 = subset(out, read == 2)$file
set_opts(samplename = "MS132")
#debug(fastq_bam_bwa)
f_merge = fastq_bam_bwa(fqs1, fqs2)
f_preproc = bam_preprocess(f_merge$outfile)
f_hapl = haplotyper(f_preproc$outfile)
flowmat = rbind(f_merge$flowmat, f_preproc$flowmat, f_hapl$flowmat)
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
fobj = to_flow(flowmat, flowdef, flowname = "fastq_haplotyper")
f_merge$outfile
out$samplename
devtools::load_all("~/Dropbox2/Dropbox/public/github_ngsflows")
View(flowdef)
View(head(flowmat))
flowmat[c(1,20, ), ]
flowmat[c(1,20, 30), ]
unique(flowdef$jobname)
flowdef$jobname
?grep
flowmat[c(1,2, 17, 30), ]
View(flowmat)
flowmat[c(1,2, 16, 17, 33, 49, 66:71), ]
View(flowmat[c(1,2, 16, 17, 33, 49, 66:71), ])
devtools::load_all(".")
fetch_genomes()
library(ngsflows)
fetch_genomes()
fetch_genomes(specied="Homo_sapiens")
fetch_genomes(species="Homo_sapiens")
require(ngsflows)
wd = "/rsrch2/iacs/ngs_runs/150806_SN1120_0348_BC79KEACXX/fastqs/Y76I8n1Y76/Project_Pancreatic-MS132/Sample_GLizee-Pancreatic-MS132-MP013normalDNA"
out = create_fq_sheet(x=wd)
params::kable(head(out))
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf",
check = FALSE)
source("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_bam_bwa.R")
#source(fetch_pipes('fastq_bam_bwa')$pip)
fqs1 = subset(out, read == 1)$file
fqs2 = subset(out, read == 2)$file
fetch_genomes(specied="Homo_sapiens")
set_opts(samplename = "MS132")
#debug(fastq_bam_bwa)
f_merge = fastq_bam_bwa(fqs1, fqs2, outfile = out$samplename[1])
f_preproc = bam_preprocess(f_merge$outfile)
f_hapl = haplotyper(f_preproc$outfile)
flowmat = rbind(f_merge$flowmat, f_preproc$flowmat, f_hapl$flowmat)
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
fqs2
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf",
check = FALSE)
get_opts()
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf",
check = FALSE)
get_opts()
debug(load_opts)
get_opts()
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf",
check = FALSE)
debug(params:::load_opts)
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf",
check = FALSE)
lst
debug(params:::.load_opts)
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf",
check = FALSE)
.parse
debug(parse_opts
)
lst
library(ngsflows)
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf",
check = FALSE)
get_opts()
bwa
source(fetch_pipes('fastq_bam_bwa')$pip)
source(fetch_pipes('fastq_bam_bwa', silent = TRUE)$pip)
library(ngsflows)
fetch_conf("ngsflows_mda.conf")
library(ngsflows)
get_opts('gatk_realign_opts')
load_opts("~/Dropbox/public/github_ngsflows/inst/conf/ngsflows_mda.conf",
check = FALSE)
get_opts('gatk_realign_opts')
haplotyper
fastq_bam_bwa
bwa
library(ngsflows)
?haplotyper
?bam_preprocess
?bam_preprocess
devtools::load_all("~/Dropbox2/Dropbox/public/github_ngsflows")
?bam_preprocess
library(ngsflows)
?bam_preprocess
?bam_preprocess
library(ngsflows)
devtools::load_all("~/Dropbox2/Dropbox/public/github_ngsflows")
?bam_preprocess
?bam_preprocess
?bam_preprocess
library(ngsflows)
?bam_preprocess
library(ngsflows)
flowr:::check_args
fetch_conf("ngsflows_mda.conf")
library(ngsflows)
require(ngsflows)
fqdir = "/rsrch2/iacs/ngs_runs/150806_SN1120_0348_BC79KEACXX/fastqs/Y76I8n1Y76/Project_Pancreatic-MS132/Sample_GLizee-Pancreatic-MS132-MP013normalDNA"
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
out = create_fq_sheet(x = fqdir)
## create a full flowmat
fqs1 = head(subset(out, read == 1)$file, 2)
fqs2 = head(subset(out, read == 2)$file, 2)
## get sample_name as a option for all subsequent steps
set_opts(samplename = "MS132")
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
View(out)
View(out$flowmat)
out$flowmat$cmd
get_opts("cpu_printreads")
library(ngsflows)
fqs1 = head(subset(out, read == 1)$file, 2)
fqs2 = head(subset(out, read == 2)$file, 2)
## get sample_name as a option for all subsequent steps
set_opts(samplename = "MS132")
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
fobj = to_flow(out$flowmat, flowdef, flowname = "fastq_haplotyper", flow_run_path = "flowr_test")
fobj@jobs$printreads@cmds
get_opts()
tail(out$flowmat$cmd)
tail(out$flowmat)
out$flowmat$cmd
debug(bam_preprocess)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
library(ngsflows)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
require(ngsflows)
fqdir = "/rsrch2/iacs/ngs_runs/150806_SN1120_0348_BC79KEACXX/fastqs/Y76I8n1Y76/Project_Pancreatic-MS132/Sample_GLizee-Pancreatic-MS132-MP013normalDNA"
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
out = create_fq_sheet(x = fqdir)
## create a full flowmat
fqs1 = head(subset(out, read == 1)$file, 2)
fqs2 = head(subset(out, read == 2)$file, 2)
## get sample_name as a option for all subsequent steps
set_opts(samplename = "MS132")
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(bam_preprocess)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
devtools::load_all(".")
debug(bam_preprocess)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(fastq_haplotyper)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
fetch_conf("ngsflows_mda.conf")
fetch_conf
system.file(package = "flowr", "conf")
system.file(package = "ngsflows", "conf")
list.files(system.file(package = "ngsflows", "conf"))
debug(fetch_conf)
places
system.file(package = "ngsflows", "conf")
system.file(package = "flowr")
system.file(package = "ngsflows")
system.file
system.file(package = "ngsflows", "conf")
devtools::system.file(package = "ngsflows", "conf")
devtools:::system.file(package = "ngsflows", "conf")
library(ngsflows)
devtools::load_all(".")
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(fetch_conf)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
places
x
fetch(x, places = places)
debug(fastq_haplotyper)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
fetch_pipes('fastq_bam_bwa', silent = TRUE)
fetch_pipes('fastq_bam_bwa')
library(ngsflows)
devtools::load_all(".")
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(fastq_bam_bwa)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(fastq_haplotyper)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(fastq_bam_bwa)
outfile
get_opts("samplename")
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(fastq_bam_bwa)
outfile
samplename
outfile
missing(outfile)
get_opts("samplename")
fastq_haplotyper
set_opts(samplename = "MS132")
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
get_opts("samplename")
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(fastq_haplotyper)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(fastq_bam_bwa)
samplename
outfile
library(ngsflows)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
fqs1
fqs2
samplename
source('~/Dropbox2/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
library(ngsflows)
require(ngsflows)
fqdir = "/rsrch2/iacs/ngs_runs/150806_SN1120_0348_BC79KEACXX/fastqs/Y76I8n1Y76/Project_Pancreatic-MS132/Sample_GLizee-Pancreatic-MS132-MP013normalDNA"
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
out = create_fq_sheet(x = fqdir)
## create a full flowmat
fqs1 = head(subset(out, read == 1)$file, 2)
fqs2 = head(subset(out, read == 2)$file, 2)
## get sample_name as a option for all subsequent steps
set_opts(samplename = "MS132")
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
tail(out$flowmat$cmd)
fobj = to_flow(out$flowmat, flowdef, flowname = "fastq_haplotyper", flow_run_path = "flowr_test")
fobj@jobs$printreads@cmds
get_opts()
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
out$flowmat$cmd
library(ngsflows)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
get_opts("cpu_bwa_aln")
library(ngsflows)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
debug(bwa)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
cmd_aln1
cmd_aln2
cmds
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
library(ngsflows)
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
library(ngsflows)
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
library(ngsflows)
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
library(ngsflows)
opts1=  load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
opts1
opts2=  load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
opts2
library(ngsflows)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
library(ngsflows)
library(ngsflows)
require(ngsflows)
fqdir = "/rsrch2/iacs/ngs_runs/150806_SN1120_0348_BC79KEACXX/fastqs/Y76I8n1Y76/Project_Pancreatic-MS132/Sample_GLizee-Pancreatic-MS132-MP013normalDNA"
flowdef = as.flowdef("~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.def")
out = create_fq_sheet(x = fqdir)
## create a full flowmat
fqs1 = head(subset(out, read == 1)$file, 2)
fqs2 = head(subset(out, read == 2)$file, 2)
## get sample_name as a option for all subsequent steps
set_opts(samplename = "MS132")
source('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.R')
load_opts('~/Dropbox/public/github_ngsflows/inst/pipelines/fastq_haplotyper.conf', check = FALSE)
out = fastq_haplotyper(fqs1, fqs2, samplename = s)
fobj = to_flow(out$flowmat, flowdef, flowname = "fastq_haplotyper", flow_run_path = "flowr_test")
tail(out$flowmat$cmd)
fobj@jobs$printreads@cmds
debug(flowr:::render_queue_cmd)
fobj = to_flow(out$flowmat, flowdef, flowname = "fastq_haplotyper", flow_run_path = "flowr_test")
fobj = to_flow(out$flowmat, flowdef, flowname = "fastq_haplotyper", flow_run_path = "flowr_test")
fobj = submit_flow(fobj, execute = FALSE)
l$CMD
l$CMD
library(ngsflows)
devtools::load_all(".")
