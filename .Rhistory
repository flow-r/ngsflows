gsub("(.*)_01R_mm9_end.*([0-9]*).fq", repl,basename(files))
gsub("(.*)_01R.*([0-9]*).fq", repl,basename(files))
gsub("(.*).*([0-9]*).fq", repl,basename(files))
gsub("(.*).*d([0-9]*).fq", repl,basename(files))
gsub("(.*).*endd([0-9]*).fq", repl,basename(files))
gsub("(.*).*end([0-9]*).fq", repl,basename(files))
gsub("(.*).*mm9_end([0-9]*).fq", repl,basename(files))
gsub("(.*).*01R_mm9_end([0-9]*).fq", repl,basename(files))
gsub("(.*).*-01R_mm9_end([0-9]*).fq", repl,basename(files))
fq_mat = create_sample_sheet(path = fq_path, project = project, subproject = subproject, outfile = samplematfile,
format = "$samplename$-01R_mm9_end$read$.fq", runid = runid)
mat
source('/DRIVES/Dropbox2/Dropbox/public/github_ngsflows/R/sheets_fastqs.R')
fq_mat = create_sample_sheet(path = fq_path, project = project, subproject = subproject, outfile = samplematfile,
format = "$samplename$-01R_mm9_end$read$.fq", runid = runid)
fqMat = read.csv2(samplematfile, sep = ",")
fqMat
require(saturn)
mypack:::reload("saturn")
require(saturn)
submit_fastq_preprocess(samplesheet, species = "mouse", outpath = outpath, preprocess = FALSE,
mapping.tool="BWA", se.or.pe = "PE")
submit_fastq_preprocess
?submit_fastq_preprocess
submit_fastq_preprocess(samplesheet =  samplematfile, species = "mouse", outpath = outpath, preprocess = FALSE,
mapping.tool="BWA", se.or.pe = "PE")
submit_fastq_preprocess(x =  samplematfile, species = "mouse", outpath = outpath, preprocess = FALSE,
mapping.tool="BWA", se.or.pe = "PE")
submit_fastq_preprocess(x =  samplematfile, species = "mouse", outpath = fq_path, preprocess = FALSE,
mapping.tool="BWA", se.or.pe = "PE")
debug(submit_fastq_preprocess)
submit_fastq_preprocess(x =  samplematfile, species = "mouse", outpath = fq_path, preprocess = FALSE,
mapping.tool="BWA", se.or.pe = "PE")
runid
s.lane
species
addl.param
mapping.tool
submit_fastq_preprocess
submit_fastq_preprocess(x =  samplematfile, species = "mouse", outpath = fq_path, preprocess = FALSE,
mapping.tool="BWA", se.or.pe = "PE")
source('/DRIVES/Dropbox2/Dropbox/iacsSVN/RPacks/saturn/R/ibm_flows_fastq_recal.R')
debug(submit_fastq_preprocess)
submit_fastq_preprocess(x =  samplematfile, species = "mouse", outpath = fq_path, preprocess = FALSE,
mapping.tool="BWA", se.or.pe = "PE")
s.lane
source('/DRIVES/Dropbox2/Dropbox/iacsSVN/RPacks/saturn/R/ibm_flows_fastq_recal.R')
read.table("/scratch/iacs/tmp/illumina_platinum/ERP001775_illumina_platinum.txt", sep = "\t")
mat = read.table("/scratch/iacs/tmp/illumina_platinum/ERP001775_illumina_platinum.txt", sep = "\t")
mat$V1
mat = read.table("/scratch/iacs/tmp/illumina_platinum/ERP001775_illumina_platinum.txt", sep = "\t", header = TRUE)
mat$fastq_ftp
mat = read.table("/scratch/iacs/tmp/illumina_platinum/ERP001775_illumina_platinum.txt",
sep = "\t", header = TRUE, stringsAsFactors = FALSE)
mat$fastq_ftp
strsplit(mat$fastq_ftp, ";")
unlist(strsplit(mat$fastq_ftp, ";"))
basename(fqs[1])
fqs <- unlist(strsplit(mat$fastq_ftp, ";"))
basename(fqs[1])
setwd("/scratch/iacs/tmp/illumina_platinum/")
mat = read.table("/scratch/iacs/tmp/illumina_platinum/ERP001775_illumina_platinum.txt",
sep = "\t", header = TRUE, stringsAsFactors = FALSE)
fqs <- unlist(strsplit(mat$fastq_ftp, ";"))
download.file(fqs[1], basename(fqs[1]))
/download.fi
?download.file
paste0("ftp://", fqs)
fqs = unlist(strsplit(mat$fastq_ftp, ";"))
fqs = paste0("ftp://", fqs)
download.file(fqs[1], basename(fqs[1]))
sprintf("ascp -QT -l 300m -i %s era-fasp@fasp.sra.ebi.ac.uk:%s <download location>",
key, fqs[1], ".")
key = "/IACS1/apps/aspera/connect/etc/asperaweb_id_dsa.openssh"
sprintf("ascp -QT -l 300m -i %s era-fasp@fasp.sra.ebi.ac.uk:%s <download location>",
key, fqs[1], ".")
fqs[1]
fqs = unlist(strsplit(mat$fastq_ftp, ";"))
fqs
gsub("ftp", "fasp",fqs)
fqs_asp = gsub("ftp", "fasp",fqs)
fqs
fqs_asp = gsub("ftp.sra.ebi.ac.uk", "ftp.sra.ebi.ac.uk:",fqs)
getURL
library(RCurl)
getURL
?getURL
library(ngsflows)
setwd("~/Dropbox/projects/analysis_ss.mt.tcga.pancan/wgs_cesc")
download.file("https://tcga-data.nci.nih.gov/tcgafiles/ftp_auth/distro_ftpusers/anonymous/tumor/cesc/gsc/genome.wustl.edu/illuminaga_dnaseq_curated/mutations/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf")
download.file("https://tcga-data.nci.nih.gov/tcgafiles/ftp_auth/distro_ftpusers/anonymous/tumor/cesc/gsc/genome.wustl.edu/illuminaga_dnaseq_curated/mutations/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf", destfile = "genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf")
maf = read.table("genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf", sep = "\t", header = TRUE)
getwd()
maf = read.table("external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf", sep = "\t", header = TRUE)
maf = read.table("external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf.txt", sep = "\t", header = TRUE)
maf = read.table("external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf.txt", sep = "\t", header = TRUE, skip = 1)
maf = read.table("external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf.txt", sep = "\t", header = TRUE, skip = 2)
require(data.table)
maf_file = 'external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf.txt'
maf = fread(maf_file)
View(maf)
maf = read.table("external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf.txt", sep = "\t", header = TRUE, skip = 3)
maf = fread(maf_file)
colnames(maf)
cols = read.table("external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf.txt", sep = "\t", header = TRUE, skip = 1, nrows = 1)
cols
cols = read.table("external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf.txt", sep = "\t", header = TRUE, skip = 1, nrows = 2)
cols = read.table("external_data/genome.wustl.edu_CESC.IlluminaGA_DNASeq_curated.Level_2.1.0.0.somatic.maf.txt", sep = "\t", skip = 1, nrows = 1)
cols
colnames(maf)
colnames(maf)[1:length(cols)] = cols
1:length(cols)
colnames(maf)[1:ncol(maf)] = cols
maf = fread(maf_file)
colnames(maf)[1:ncol(maf)] = cols
maf = fread(maf_file)
1:ncol(maf)
colnames(maf) = cols[1:ncol(maf)]
maf = fread(maf_file)
colnames(maf)
cols[1:ncol(maf)]
as.c(cols[1:ncol(maf)])
as.c=as.character
colnames(maf) = as.c(cols[1:ncol(maf)])
as.c(cols[1:ncol(maf)])
as.c(cols[1,1:ncol(maf)])
cols[1,1:ncol(maf)]
cols[,1:ncol(maf)]
unlist(cols[,1:ncol(maf)])
as.c(unlist(cols[,1:ncol(maf)])()
)
as.c(unlist(cols[,1:ncol(maf)]))
as.c=as.character
maf = fread(maf_file)
colnames(maf) = as.c(unlist(cols[,1:ncol(maf)]))
?setnames
setnames(maf, 1:ncol(maf), as.c(unlist(cols[,1:ncol(maf)])))
View(maf)
maf_mt = subset(maf, Chromosome == 'MT')
View(maf_mt)
maf_mt = subset(maf, Chromosome == 'MT' & Entrez_Gene_Id != 0)
maf_mt
cols
subset(mat_mt, select = c('tumor_ref_reads', 'tumor_var_reads', 'tumor_vaf', 'normal_ref_reads', 'normal_var_reads'))
subset(maf_mt, select = c('tumor_ref_reads', 'tumor_var_reads', 'tumor_vaf', 'normal_ref_reads', 'normal_var_reads'))
subset(maf_mt, select = c('tumor_ref_reads', 'tumor_var_reads', 'normal_ref_reads', 'normal_var_reads'))
subset(maf_mt, select = c('Hugo_Symbol', 'tumor_ref_reads', 'tumor_var_reads', 'normal_ref_reads', 'normal_var_reads'))
maf_mt_cov = subset(maf_mt, select = c('Hugo_Symbol', 'tumor_ref_reads', 'tumor_var_reads', 'normal_ref_reads', 'normal_var_reads'))
cols
maf_mt_cov[, tumor_cov = tumor_ref_reads + tumor_var_reads]
maf_mt_cov[, tumor_cov := tumor_ref_reads + tumor_var_reads]
maf_mt_cov[, tumor_cov := tumor_ref_reads + tumor_var_reads, normal_cov := normal_ref_reads + normal_var_reads]
maf_mt_cov[, tumor_cov := tumor_ref_reads + tumor_var_reads, normal_cov := normal_ref_reads + normal_var_reads]
maf_mt_cov[, tumor_cov := tumor_ref_reads + tumor_var_reads]
maf_mt_cov[, normal_cov := normal_ref_reads + normal_var_reads]
maf_mt_cov
require(ggplot2)
ggplot(maf_mt_cov) + theme_minimal() +
geom_boxplot(aes(x = 'Hugo_Symbol', y ='tumor_cov'))
ggplot(maf_mt_cov) + theme_minimal() +
geom_boxplot(aes(x ='tumor_cov'))
ggplot(maf_mt_cov) + theme_minimal() +
geom_boxplot(aes(x = 'Hugo_Symbol', y ='tumor_cov'))
data = as.data.frame(maf_mt_cov)
ggplot(data) + theme_minimal() +
geom_boxplot(aes(x = 'Hugo_Symbol', y ='tumor_cov'))
class(data$tumor_cov)
ggplot(data) + theme_minimal() +
geom_boxplot(aes(x = Hugo_Symbol, y =tumor_cov))
ggplot(maf_mt_cov) + theme_minimal() +
geom_boxplot(aes(x = Hugo_Symbol, y =tumor_cov))
ggplot(maf_mt_cov) + theme_minimal() +
geom_boxplot(aes(x = Hugo_Symbol, y =tumor_cov)) + geom_jitter()
ggplot(maf_mt_cov) + theme_minimal() +
geom_boxplot(aes(x = Hugo_Symbol, y = tumor_cov)) + geom_jitter(aes(x = Hugo_Symbol, y = tumor_cov))
ggplot(maf_mt_cov) + theme_minimal() +
geom_boxplot(aes(x = Hugo_Symbol, y = tumor_cov)) + geom_jitter(aes(x = Hugo_Symbol, y = tumor_cov)) +
scale_y_log10()
order(maf_mt_cov$tumor_cov, decreasing = TRUE)
maf_mt_cov = maf_mt_cov[order(maf_mt_cov$tumor_cov, decreasing = TRUE),]
View(maf_mt_cov)
cols
maf_mt_cov = subset(maf_mt, select = c('Tumor_Sample_Barcode', 'Hugo_Symbol', 'tumor_ref_reads',
'tumor_var_reads', 'normal_ref_reads', 'normal_var_reads'))
maf_mt_cov[, tumor_cov := tumor_ref_reads + tumor_var_reads]
maf_mt_cov[, normal_cov := normal_ref_reads + normal_var_reads]
maf_mt_cov = maf_mt_cov[order(maf_mt_cov$tumor_cov, decreasing = TRUE),]
View(maf_mt_cov)
library(reshape2)
library(ggplot2)
dat=melt("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv",id="Date")
ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge")
head(dat)
?melt
dat = read.csv2("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE)
head(dat)
dat = read.csv2("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",")
head(dat)
dat = read.csv("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",")
head(dat)
dat = read.csv("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",")
head(dat)
View(dat)
dat = read.csv("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",")
head(dat)
tmp <- lapply(1:nrow(dat), function(i){
gsub("\n%","", dat[i,])
})
dat2 <- do.call(rbibd, tmp)
dat2 <- do.call(rbind, tmp)
head(dat2)
dat = read.csv("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, stringAsFactors = FALSE, sep = ","  )
dat = read.csv2("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, stringAsFactors = FALSE, sep = ","  )
dat = read.csv("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ","  )
head(dat)
tmp <- lapply(1:nrow(dat), function(i){
gsub("\n%","", as.c(dat[i,]))
})
i=1
as.c(dat[i,])
as.c=as.character
dat = read.csv("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ","  )
head(dat)
tmp <- lapply(1:nrow(dat), function(i){
gsub("\n%","", as.c(dat[i,]))
})
dat2 <- do.call(rbind, tmp)
head(dat2)
as.c(dat[i,])
dat[i,]
?read.csv
dat = read.table("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",")
head(dat)
dat = read.table("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(dat)
dat[i,]
as.c(dat[i,])
gsub("\n%","", as.c(dat[i,]))
tmp <- lapply(1:nrow(dat), function(i){
gsub("\n%","", as.c(dat[i,]))
})
dat2 <- do.call(rbind, tmp)
head(dat2)
dat = melt(dat, id="Date")
dat
ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge")
ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge") + theme_minimal()
p <- ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge") + theme_minimal()
ggplot(dat,aes(x="Date",y=value,fill="variable"))+geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))+
scale_fill_discrete(name="Market Index",labels=c("DJIA","S&P500","Russell 2000","Russell 3000","NYSE/AMEX","NYSE/AMEX/NASDAQ"))
cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#F0E442",  "#D55E00", "#CC79A7")
ggplot(dat,aes(x="Date",y=value,group=variable,color=variable))+geom_point(size=3,fill="white")+geom_line(size=1.5,linetype="dotted")
scale_color_manual(values=cbPalette)+ggtitle("3-Year Periodic CAGR Trend")
p <- ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge") + theme_minimal()
p
ggplot(dat,aes(x="Date",y=value,fill="variable"))+geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))+
scale_fill_discrete(name="Market Index",labels=c("DJIA","S&P500","Russell 2000","Russell 3000","NYSE/AMEX","NYSE/AMEX/NASDAQ"))
head(dat)
dat = melt(dat2, id="Date")
p <- ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge") + theme_minimal()
p
head(dat)
View(dat)
head(dat2)
dat = read.table("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(dat)
tmp <- lapply(1:nrow(dat), function(i){
gsub("\n%","", as.c(dat[i,]))
})
dat2 <- do.call(rbind, tmp)
head(dat2)
colnames(dat2) = colnames(dat)
head(dat2)
colnames(dat)
head(dat)
p <- ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge") + theme_minimal()
p
head(dat)
dat2 <- do.call(rbind, tmp)
colnames(dat2) = colnames(dat)
head(dat2)
dat = melt(dat2, id="Date")
head(dat)
p <- ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge") + theme_minimal()
p
head(dat)
head(dat2)
dat2 <- do.call(rbind, tmp)
dat2 = as.data.frame(dat2)
colnames(dat2) = colnames(dat)
head(dat2)
colnames(dat2) = colnames(dat)
head(dat2)
colnames(dat)
dat = read.table("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(dat)
tmp <- lapply(1:nrow(dat), function(i){
gsub("\n%","", as.c(dat[i,]))
})
mat = read.table("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
mat = read.table("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(mat)
tmp <- lapply(1:nrow(mat), function(i){
gsub("\n%","", as.c(mat[i,]))
})
dat2 <- do.call(rbind, tmp)
dat2 = as.data.frame(dat2)
colnames(dat2) = colnames(dat)
head(dat2)
dat2 <- as.Date(dat2$Date)
dat = melt(dat2, id="Date")
head(dat)
p <- ggplot(dat,aes(x=Date,y=value,fill="variable"))+geom_bar(stat="identity",position="dodge") + theme_minimal()
p
ggplot(dat,aes(x="Date",y=value,fill="variable"))+geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))+
scale_fill_discrete(name="Market Index",labels=c("DJIA","S&P500","Russell 2000","Russell 3000","NYSE/AMEX","NYSE/AMEX/NASDAQ"))
ggplot(dat, aes(x="Date",y=value,fill="variable"))+geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))+
scale_fill_discrete(name="Market Index", labels=c("DJIA","S&P500","Russell 2000","Russell 3000","NYSE/AMEX","NYSE/AMEX/NASDAQ"))
head(dat)
heat(mat)
mat
mat = read.table("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(mat)
tmp <- lapply(1:nrow(mat), function(i){
gsub("\n%","", as.c(mat[i,]))
})
dat2 <- do.call(rbind, tmp)
dat2 = as.data.frame(dat2)
colnames(dat2) = colnames(dat)
head(dat2)
#dat2 <- as.Date(dat2$Date)
dat = melt(dat2, id="Date")
head(dat)
View(dat)
head(dat2)
mat = read.table("/drives/Dropbox/share/tapsi.sahil.share/CAGR3-all.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(mat)
tmp <- lapply(1:nrow(mat), function(i){
gsub("\n%","", as.c(mat[i,]))
})
dat2 <- do.call(rbind, tmp)
head(dat2)
dat2 = as.data.frame(dat2)
head(dat2)
head(dat2)
head(dat2)
colnames(dat2) = colnames(dat)
head(dat2)
colnames(dat2) = colnames(mat)
head(dat2)
#dat2 <- as.Date(dat2$Date)
dat = melt(dat2, id="Date")
head(dat)
View(dat)
ggplot(dat, aes(x="Date",
y=value, fill="variable"))+geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))+
scale_fill_discrete(name="Market Index",
labels=c("DJIA","S&P500","Russell 2000","Russell 3000","NYSE/AMEX","NYSE/AMEX/NASDAQ"))
head(dat)
dat
?levels
levels(dat$variable)
levels(dat$variable) <- c("DJIA","S&P500","Russell 2000","Russell 3000","NYSE/AMEX","NYSE/AMEX/NASDAQ")
levels(dat$variable)
ggplot(dat, aes(x="Date",
y=value, fill="variable"))+geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))+
scale_fill_discrete(name="Market Index",
labels=c("DJIA","S&P500","Russell 2000","Russell 3000","NYSE/AMEX","NYSE/AMEX/NASDAQ"))
str(str)
str(dat)
ggplot(dat, aes(x="Date", y=value, fill="variable")) +
geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))+
scale_fill_discrete(name="Market Index",
labels=c("DJIA","S&P500","Russell 2000","Russell 3000","NYSE/AMEX","NYSE/AMEX/NASDAQ"))
ggplot(dat, aes(x="Date", y=value, fill="variable")) +
geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))
ggplot(dat, aes(x="Date", y=value, fill=variable)) +
geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))
ggplot(dat, aes(x=Date, y=value, fill=variable)) +
geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))
ggplot(dat, aes(x=Date, y=value, fill=variable)) +
geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue")) +
scale_y_log10()
str(dat)
as.c(dat$value)
as.n(as.c(dat$value))
as.numeric(as.c(dat$value))
dat$value = as.numeric(as.c(dat$value))
is.na(dat$value)
dat[is.na(dat$value),]
dat=dat[!is.na(dat$value),]
ggplot(dat, aes(x=Date, y=value, fill=variable)) +
geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue")) +
scale_y_log10()
ggplot(dat, aes(x=Date, y=value, fill=variable)) +
geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue")) +
scale_y_log10() +
opts(axis.title.y=theme_text(angle=45))
p <- ggplot(dat, aes(x=Date, y=value, fill=variable)) +
geom_bar(stat="identity") +
ggtitle("3-Year Periodic CAGR ")+
theme(plot.title=element_text(lineheight=0.8,face="bold",colour="blue"))
p +   scale_y_log10() +
theme(axis.text.theme.y(angle=45))
p +   scale_y_log10() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
0.15
gatk_target_opt
bam="/scratch/iacs/gcc/levelii/140829_SN208_0523_BC5FKTACXX/TCGA-VD-AA8P-10A-01D-A40E_140829_SN208_0523_BC5FKTACXX_s_8_rg.sorted.bam"
cmd <- sprintf("%s view -H %s | grep  '\\@SQ' | cut -f 2,3 | cut -d ':' -f 3",
samtools_exe, bam)
samtols_exe = "samtools"
cmd <- sprintf("%s view -H %s | grep  '\\@SQ' | cut -f 2,3 | cut -d ':' -f 3",
samtools_exe, bam)
samtools_exe = "samtools"
cmd <- sprintf("%s view -H %s | grep  '\\@SQ' | cut -f 2,3 | cut -d ':' -f 3",
samtools_exe, bam)
cmd
chrs_info <- system(cmd, intern = TRUE)
chrs_info
cmd <- sprintf("%s view -H %s | grep  '\\@SQ' | cut -f 2,3",
samtools_exe, bam)
chrs_info <- system(cmd, intern = TRUE)
chrs_info
strsplit(chrs_info, "\t")
strsplit(chrs_info, "\t|:")
lapply(strsplit(chrs_info, "\t|:"), "[[", 2)
lapply(strsplit(chrs_info, "\t|:"), "[[", c(2, 4))
chrs_info <- strsplit(chrs_info, "\t|:")
chrs_info
chrs_info <- system(cmd, intern = TRUE)
chrs_info <- system(cmd, intern = TRUE)
chrs_info <- do.call(rbind, lapply(chrs_info, function(x){
y = strsplit(x, "\t|:")
y[, c(2,4)]
}))
chrs_info <- system(cmd, intern = TRUE)
chrs_info <- do.call(rbind, lapply(chrs_info, function(x){
y = strsplit(x, "\t|:")
y[c(2,4)]
}))
chrs_info
chrs_info <- system(cmd, intern = TRUE)
x=chrs_info[1]
x
y = strsplit(x, "\t|:")
y
chrs_info <- system(cmd, intern = TRUE)
chrs_info <- do.call(rbind, lapply(chrs_info, function(x){
y = strsplit(x, "\t|:")[[1]]
y[c(2,4)]
}))
chrs_info
get_bam_chrs <- function(bam, samtools_exe = "samtools") {
cmd <- sprintf("%s view -H %s | grep  '\\@SQ' | cut -f 2,3",
samtools_exe, bam)
chrs_info <- system(cmd, intern = TRUE)
chrs_info <- do.call(rbind, lapply(chrs_info, function(x){
y = strsplit(x, "\t|:")[[1]]
y[c(2,4)]
}))
return (chrs_info)
}
chrs_info <- get_bam_chrs(bam)
chrs_info
inbam=bam
intervalsfile <- gsub(".bam", ".realign.intervals", basename(inbam))
intervalsfile
chrs_info
chrs_info[, 1]
intervalsfiles <- gsub(".bam", paste0(chrs_info[, 1], ".realign.intervals"),
basename(inbam))
intervalsfiles <- paste0(gsub(".bam", "", basename(inbam)), chrs_info[, 1],
".realign.intervals")
intervalsfiles
intervalsfiles <- paste0(gsub(".bam", "_", basename(inbam)), chrs_info[, 1],
".realign.intervals")
intervalsfiles
chrs_prefix <- paste0(gsub(".bam", "_", basename(inbam)), chrs_info[, 1])
chrs_prefix
intervalsfiles <- paste0(chrs_prefix, ".realign.intervals")
intervalsfiles
intervalsfiles <- paste0(chrs_prefix, ".realign.intervals")
realignedbams <- paste0(chrs_prefix ,".realigned.bam")
realignedbams
bam_prefix <- gsub(".bam", "", basename(inbam))
bam_prefix
intervalsfile <- paste0(bam_prefix, ".realign.intervals")
realignedbams <- paste0(chrs_prefix ,".realigned.bam")
realignedbams
